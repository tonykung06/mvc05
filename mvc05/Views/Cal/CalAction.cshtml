@model mvc05.Models.Cal

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>CalAction</title>
    <style>
        .field-validation-error, .validation-summary-errors {
            color: red;
            font-weight: bold;
        }

        .input-validation-error {
            background:pink;
            border: 1px solid red;
        }
    </style>
</head>
<body>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Cal - @ViewBag.Method (@DateTime.Now.ToString())</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Input1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Input1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Input1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Input2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Input2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Input2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Result, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Result, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Result, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Calculate" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        <p>Last Calculation: @ViewBag.RecentCal</p>
    </div>

    <div>
        @Html.ActionLink("Back to List", "Index")
        @if (Model != null && Model.Input1 != null && Model.Input2 != null)
        {
            <br />
            var bookmarkDesc = "Cal";
            if (Model.Remarks != null && Model.Remarks != "")
            {
                bookmarkDesc = Model.Remarks;
            }
            <span>Bookmark this: </span>
            @Html.ActionLink(@bookmarkDesc, "CalAction/" + @Model.Input1 + "/" + @Model.Input2 + "/" + @Model.Remarks)
        }
    </div>
</body>

</html>
